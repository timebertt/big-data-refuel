#Begin: Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-deployment-init-configmap
data:
  mysql-init.sql: |
    CREATE TABLE `fuel_prices` (
      `window_start` TIMESTAMP NOT NULL,
      `window_end` TIMESTAMP NOT NULL,
      `post_code` CHAR(5) NOT NULL,
      `diesel` DECIMAL(4,3) NULL DEFAULT 0.0,
      `e5` DECIMAL(4,3) NULL DEFAULT 0.0,
      `e10` DECIMAL(4,3) NULL DEFAULT 0.0,
      PRIMARY KEY(`window_start`, `window_end`, `post_code`)
    );

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: my-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mysql
  template:
    metadata:
      labels:
        app: my-mysql
    spec:
      # Mount the configmap volume
      # This is an excerpt of deployment.spec.template.spec
      volumes:
      - name: init-volume
        configMap:
          name: mysql-deployment-init-configmap
      containers:
      - name: my-mysql
        image: mysql
        volumeMounts:
        - name: init-volume
          mountPath: /docker-entrypoint-initdb.d/
        # Set required environment variables to initialize the container
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "mysecretpw"
        - name: MYSQL_DATABASE
          value: "prices"
        ports:
        - containerPort: 3306
        - containerPort: 33060

---
#Begin: Service
apiVersion: v1
kind: Service
metadata:
  name: my-app-mysql-service
spec:
  selector:
    app: my-mysql
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
    targetPort: 3306
  - name: mysql-xproto
    protocol: TCP
    port: 33060
    targetPort: 33060
#End: Service
